models:
  - name: customers_stephen
    description: Stephen's test model
    columns:
      - name: customer_id
        tests:
        - unique
        - accepted_values:
            values:
              - "15df7af1-ef13-473f-bbea-deedde94ac32"
  
  - name: customers
    latest_version: 3
    group: ecommerce
    access: public
    config:
      contracted: true
    description: Public - Customer overview data mart, offering key details for each unique customer. One row per customer.
    columns:
      - name: customer_id
        description: The unique key of the orders mart.
        tests:
          - not_null
          - unique
      - name: customer_name
        description: Customers' full name.
        data_type: string
      - name: count_lifetime_orders
        description: Total number of orders a customer has ever placed.
        data_type: integer
      - name: first_ordered_at
        description: The timestamp when a customer placed their first order.
        data_type: date
      - name: last_ordered_at
        description: The timestamp of a customer's most recent order.
        data_type: date
      - name: lifetime_spend_pretax
        description: The sum of all the pre-tax subtotals of every order a customer has placed.
      - name: lifetime_spend
        description: The sum of all the order totals (including tax) that a customer has ever placed.
      - name: customer_type
        description: Options are 'new' or 'returning', indicating if a customer has ordered more than once or has only placed their first order to date.
        tests:
          - accepted_values:
              values: ['new', 'returning']
    versions:
      - v: 3
      - v: 2
        columns:
          - include: "*"
            exclude:
              - lifetime_spend_pretax
      - v: 1

  - name: orders
    group: ecommerce
    access: public
    config:
      contract:
        enforced: true
    description: Order overview data mart, offering key details for each order inlcluding if it's a customer's first order and a food vs. drink item breakdown. One row per order.
    tests:
      - dbt_utils.expression_is_true:
          expression: "count_food_items + count_drink_items = count_items"
      - dbt_utils.expression_is_true:
          expression: "subtotal_food_items + subtotal_drink_items = subtotal"
    # model-level constraints
    constraints:
      - type: not_null
        columns: [count_items, count_drink_items]
        name: basic_constraint_test
    columns:
      - name: order_id
        data_type: string
        description: The unique key of the orders mart.
        constraints:
          - type: not_null
          - type: unique
        tests:
          - not_null
          - unique
      - name: customer_id
        data_type: string
        description: The foreign key relating to the customer who placed the order.
        # tests:
        #   - relationships:
        #       to: ref('stg_customers')
        #       field: customer_id
      - name: location_id
        data_type: string
        description: The foreign key relating to the location the order was placed at.
      - name: order_total
        data_type: float
        description: The total amount of the order in USD including tax.
      - name: ordered_at
        description: The timestamp the order was placed at.
        data_type: timestamp
      - name: count_food_items
        description: The number of individual food items ordered.
        data_type: integer
      - name: count_drink_items
        description: The number of individual drink items ordered.
        data_type: integer
        constraints:
          - type: not_null
          - type: unique
      - name: count_items
        description: The total number of both food and drink items ordered.
        data_type: integer
      - name: subtotal_food_items
        data_type: float
        description: The sum of all the food item prices without tax.
      - name: subtotal_drink_items
        data_type: float
        description: The sum of all the drink item prices without tax.
      - name: subtotal
        data_type: float
        description: The sum total of both food and drink item prices without tax.
      - name: order_cost
        data_type: float
        description: The sum of supply expenses to fulfill the order.
      - name: customer_order_index
        data_type: integer
        description: The count of how many times a customer as ordered, and where this order sits within that. The nth order as customer has placed. If a customer has placed two orders in the past before this one, this will be 3.
      - name: location_name
        description: The full location name of where this order was placed. Denormalized from `stg_locations`.
        data_type: string
      - name: is_first_order
        description: A boolean indicating if this order is from a new customer placing their first order.
        data_type: boolean
      - name: is_food_order
        description: A boolean indicating if this order included any food items.
        data_type: boolean
      - name: is_drink_order
        description: A boolean indicating if this order included any drink items.
        data_type: boolean
      - name: tax_paid
        description: The amount of tax paid on the order.
        data_type: float